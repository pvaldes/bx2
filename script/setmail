if (word(2 $loadinfo()) != [pf]) { load -pf $word(1 $loadinfo()); return; };

# SetMail -- Here's the plan.
#
# When you have /set mail 1, you want to see (Mail).
# When you have /set mail 2, you want to see (Mail :%d).
# Where (Mail) is controlled by /set mail_format1
# And (Mail :%d) is controlled by /set mail_format2.
#
# This script is a good example of how to use /on set to add a new /set
# and change the default behavior of an existing /set to do something that
# you otherwise couldn't do! =)
#

@ mail.format1 = [ (Mail)];
@ mail.format2 = [ (Mail: %M)];

on %set "mail 1" {
	^set status_mail $mail.format1;
};

on %set "mail 2" {
	^set status_mail $mail.format2;
};

on %set "mail_format1 *" {
	@ mail.format1 = [$1-];
};

on %set "mail_format2 *" {
	@ mail.format2 = [$1-];
};

#hop'97
